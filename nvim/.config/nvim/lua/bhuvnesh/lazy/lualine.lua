return {
    --NOTE: CONFIG 3

    -- {
    --     "nvim-lualine/lualine.nvim",
    --     event = "VeryLazy",
    --     config = function()
    --         require("lualine").setup({
    --             options = {
    --                 theme = "auto",
    --                 globalstatus = true,
    --                 component_separators = { left = "", right = "" },
    --                 section_separators = { left = "█", right = "█" },
    --             },
    --             sections = {
    --                 lualine_b = {
    --                     { "branch", icon = "" },
    --                     "diff",
    --                     "diagnostics",
    --                 },
    --                 lualine_c = {
    --                     { "filename", path = 1 },
    --                 },
    --                 lualine_x = {
    --                     "filetype",
    --                 },
    --             },
    --         })
    --     end,
    -- }

    --NOTE: CONFIG 1
    --
    --     'nvim-lualine/lualine.nvim',
    --     dependencies = { 'nvim-tree/nvim-web-devicons' },
    -- 	config = function()
    --     require('lualine').setup {
    --   options = {
    --     icons_enabled = true,
    --     theme = 'auto',
    --     -- component_separators = { left = '', right = ''},
    --     -- section_separators = { left = '', right = ''},
    --     -- section_separators = { left = '', right = '' },
    --     -- component_separators = { left = '', right = '' },
    --     section_separators = { left = '', right = '' },
    --     component_separators = { left = '', right = '' },
    --     disabled_filetypes = {
    --       statusline = {},
    --       winbar = {},
    --     },
    --     ignore_focus = {},
    --     always_divide_middle = true,
    --     globalstatus = false,
    --     refresh = {
    --       statusline = 1000,
    --       tabline = 1000,
    --       winbar = 1000,
    --     }
    --   },
    --   sections = {
    --     lualine_a = {'mode'},
    --     lualine_b = {'branch'},
    -- 				lualine_c = {
    -- 					{
    -- 						"filename",
    -- 						file_status = true, -- Displays file status (readonly status, modified status)
    -- 						newfile_status = false, -- Display new file status (new file means no write after created)
    -- 						path = 1, -- 0: Just the filename
    -- 						-- 1: Relative path
    -- 						-- 2: Absolute path
    -- 						-- 3: Absolute path, with tilde as the home directory
    -- 						-- 4: Filename and parent dir, with tilde as the home directory
    --
    -- 						shorting_target = 40, -- Shortens path to leave 40 spaces in the windows
    -- 						-- for other components. (terrible name, any suggestions?)
    -- 						symbols = {
    -- 							modified = "[+]", -- Text to show when the file is modified.
    -- 							readonly = "[-]", -- Text to show when the file is non-modifiable or readonly.
    -- 							unnamed = "[No Name]", -- Text to show for unnamed buffers.
    -- 							newfile = "[New]", -- Text to show for newly created file before first write
    -- 						},
    -- 					},
    -- 				},
    --     lualine_x = {'filetype'},
    --     lualine_y = {'progress'},
    --     lualine_z = {'location'}
    --   },
    --   inactive_sections = {
    --     lualine_a = {},
    --     lualine_b = {},
    --     lualine_c = {'filename'},
    --     lualine_x = {'location'},
    --     lualine_y = {},
    --     lualine_z = {}
    --   },
    --   tabline = {},
    --   winbar = {},
    --   inactive_winbar = {},
    --   extensions = {}
    -- }

    -- NOTE: CONFIG 2

    -- "nvim-lualine/lualine.nvim",
    -- lazy = false,
    -- dependencies = { "nvim-tree/nvim-web-devicons" },
    -- config = function()
    --     local lualine = require("lualine")
    --     local lazy_status = require("lazy.status") -- to configure lazy pending updates count
    --
    --     local colors = {
    --         blue = "#65D1FF",
    --         green = "#3EFFDC",
    --         pink = "#FF007F",
    --         violet = "#FF61EF",
    --         yellow = "#FFDA7B",
    --         red = "#FF4A4A",
    --         fg = "#c3ccdc",
    --         bg = "#112638", -- go back to default lualine color
    --         -- bg = "#000000",
    --         inactive_bg = "#2c3043",
    --     }
    --     -- Uncomment the below theme to activate the theme for lualine
    --     local my_lualine_theme = {
    --         normal = {
    --             a = { bg = colors.blue, fg = colors.bg, gui = "bold" },
    --             b = { bg = colors.bg, fg = colors.fg },
    --             c = { bg = colors.bg, fg = colors.fg },
    --         },
    --         insert = {
    --             a = { bg = colors.green, fg = colors.bg, gui = "bold" },
    --             b = { bg = colors.bg, fg = colors.fg },
    --             c = { bg = colors.bg, fg = colors.fg },
    --         },
    --         visual = {
    --             a = { bg = colors.violet, fg = colors.bg, gui = "bold" },
    --             b = { bg = colors.bg, fg = colors.fg },
    --             c = { bg = colors.bg, fg = colors.fg },
    --         },
    --         command = {
    --             a = { bg = colors.yellow, fg = colors.bg, gui = "bold" },
    --             b = { bg = colors.bg, fg = colors.fg },
    --             c = { bg = colors.bg, fg = colors.fg },
    --         },
    --         replace = {
    --             a = { bg = colors.red, fg = colors.bg, gui = "bold" },
    --             b = { bg = colors.bg, fg = colors.fg },
    --             c = { bg = colors.bg, fg = colors.fg },
    --         },
    --         inactive = {
    --             a = { bg = colors.inactive_bg, fg = colors.semilightgray, gui = "bold" },
    --             b = { bg = colors.inactive_bg, fg = colors.semilightgray },
    --             c = { bg = colors.inactive_bg, fg = colors.semilightgray },
    --         },
    --     }
    --
    --     -- configure lualine with modified theme
    --     lualine.setup({
    --         options = {
    --             -- theme = my_lualine_theme, -- this to get the fancy lualine back.
    --             section_separators = {
    --                 left = "",
    --                 right = "",
    --             },
    --         },
    --         sections = {
    --             lualine_x = {
    --                 {
    --                     -- require("noice").api.statusline.mode.get,
    --                     -- cond = require("noice").api.statusline.mode.has,
    --                     -- color = { fg = "#ff9e64" },
    --                     "filetype",
    --                     -- lazy_status.updates,
    --                     -- cond = lazy_status.has_updates,
    --                     -- color = { fg = "#ff9e64" },
    --                 },
    --                 -- {
    --                 -- uncomment below 3 lines to use noice
    --                 --   require("noice").api.status.command.get,
    --                 --   cond = require("noice").api.status.command.has,
    --                 --   color = { fg = "#ff9e64" },
    --                 -- },
    --                 -- { "encoding" },
    --                 -- { "fileformat" },
    --                 -- { "filetype" },
    --             },
    --             -- lualine_a = { "FugitiveHead" },
    --             --
    --             lualine_a = {
    --                 { "mode", icon = "" },
    --                 -- { "mode", icon = "" },
    --             },
    --
    --             lualine_b = {
    --                 "branch"
    --             },
    --
    --             lualine_c = {
    --                 {
    --                     "filename",
    --                     file_status = true,     -- Displays file status (readonly status, modified status)
    --                     newfile_status = false, -- Display new file status (new file means no write after created)
    --                     path = 1,               -- 0: Just the filename
    --                     -- 1: Relative path
    --                     -- 2: Absolute path
    --                     -- 3: Absolute path, with tilde as the home directory
    --                     -- 4: Filename and parent dir, with tilde as the home directory
    --
    --                     shorting_target = 40, -- Shortens path to leave 40 spaces in the windows
    --                     -- for other components. (terrible name, any suggestions?)
    --                     symbols = {
    --                         modified = "[+]",      -- Text to show when the file is modified.
    --                         readonly = "[-]",      -- Text to show when the file is non-modifiable or readonly.
    --                         unnamed = "[No Name]", -- Text to show for unnamed buffers.
    --                         newfile = "[New]",     -- Text to show for newly created file before first write
    --                     },
    --                 },
    --             },
    --         },
    --     })
    --     -- delete lualine_c if you want to go to back to original lualine
    --     require("lualine").hide({
    --         place = { "statusline", "tabline", "winbar" }, -- The segment this change applies to.
    --         unhide = true,                                 -- whether to re-enable lualine again/ enable cmd to cmd_popup in noice to get cmd terminal.
    --     })
    -- end,

    --------->>>> MELKEY LUALINE--------------<<<<<<<<<<

    -- {
    --     "nvim-lualine/lualine.nvim",
    --     event = "VimEnter",
    --     config = function()
    --         -- Eviline config for lualine
    --         -- Author: shadmansaleh
    --         -- Credit: glepnir
    --         local lualine = require("lualine")
    --
    --         -- Color table for highlights
    --         local colors = {
    --             -- bg = "#101019",
    --             bg = "#393552",
    --             fg = "#cdd6f4",
    --             yellow = "#f9e2af",
    --             cyan = "#89dceb",
    --             darkblue = "#45475a",
    --             green = "#a6e3a1",
    --             orange = "#fab387",
    --             violet = "#cba6f7",
    --             magenta = "#f5c2e7",
    --             blue = "#89b4fa",
    --             red = "#f38ba8",
    --         }
    --
    --         local conditions = {
    --             buffer_not_empty = function()
    --                 return vim.fn.empty(vim.fn.expand("%:t")) ~= 1
    --             end,
    --             hide_in_width = function()
    --                 return vim.fn.winwidth(0) > 80
    --             end,
    --             check_git_workspace = function()
    --                 local filepath = vim.fn.expand("%:p:h")
    --                 local gitdir = vim.fn.finddir(".git", filepath .. ";")
    --                 return gitdir and #gitdir > 0 and #gitdir < #filepath
    --             end,
    --         }
    --
    --         -- Config
    --         local config = {
    --             options = {
    --                 -- Disable sections and component separators
    --                 component_separators = "",
    --                 section_separators = "",
    --                 theme = {
    --                     -- We are going to use lualine_c an lualine_x as left and
    --                     -- right section. Both are highlighted by c theme .  So we
    --                     -- are just setting default looks o statusline
    --                     normal = { c = { fg = colors.fg, bg = colors.bg } },
    --                     inactive = { c = { fg = colors.fg, bg = colors.bg } },
    --                 },
    --                 disabled_filetypes = { "NvimTree", "alpha" },
    --             },
    --             sections = {
    --                 -- these are to remove the defaults
    --                 lualine_a = {},
    --                 lualine_b = {},
    --                 lualine_y = {},
    --                 lualine_z = {},
    --                 -- These will be filled later
    --                 lualine_c = {},
    --                 lualine_x = {},
    --             },
    --             inactive_sections = {
    --                 -- these are to remove the defaults
    --                 lualine_a = {},
    --                 lualine_b = {},
    --                 lualine_y = {},
    --                 lualine_z = {},
    --                 lualine_c = {},
    --                 lualine_x = {},
    --             },
    --         }
    --
    --         -- Inserts a component in lualine_c at left section
    --         local function ins_left(component)
    --             table.insert(config.sections.lualine_c, component)
    --         end
    --
    --         -- Inserts a component in lualine_x ot right section
    --         local function ins_right(component)
    --             table.insert(config.sections.lualine_x, component)
    --         end
    --
    --         ins_left({
    --             function()
    --                 return "▊"
    --             end,
    --             color = { fg = colors.blue },      -- Sets highlighting of component
    --             padding = { left = 0, right = 1 }, -- We don't need space before this
    --         })
    --
    --
    --         ins_left({
    --             -- mode component
    --             function()
    --                 return ""
    --             end,
    --             color = function()
    --                 -- auto change color according to neovims mode
    --                 local mode_color = {
    --                     n = colors.red,
    --                     i = colors.green,
    --                     v = colors.blue,
    --                     [""] = colors.blue,
    --                     V = colors.blue,
    --                     c = colors.magenta,
    --                     no = colors.red,
    --                     s = colors.orange,
    --                     S = colors.orange,
    --                     [""] = colors.orange,
    --                     ic = colors.yellow,
    --                     R = colors.violet,
    --                     Rv = colors.violet,
    --                     cv = colors.red,
    --                     ce = colors.red,
    --                     r = colors.cyan,
    --                     rm = colors.cyan,
    --                     ["r?"] = colors.cyan,
    --                     ["!"] = colors.red,
    --                     t = colors.red,
    --                 }
    --                 return { fg = mode_color[vim.fn.mode()] }
    --             end,
    --             padding = { right = 1 },
    --         })
    --
    --         ins_left({
    --             -- filesize component
    --             "filesize",
    --             cond = conditions.buffer_not_empty,
    --         })
    --
    --         ins_left({
    --             "filename",
    --             cond = conditions.buffer_not_empty,
    --             color = { fg = colors.magenta, gui = "bold" },
    --         })
    --
    --         ins_left({ "location" })
    --
    --         ins_left({ "progress", color = { fg = colors.fg, gui = "bold" } })
    --
    --         ins_left({
    --             "diagnostics",
    --             sources = { "nvim_diagnostic" },
    --             symbols = { error = " ", warn = " ", info = " " },
    --             diagnostics_color = {
    --                 color_error = { fg = colors.red },
    --                 color_warn = { fg = colors.yellow },
    --                 color_info = { fg = colors.cyan },
    --             },
    --         })
    --
    --         -- Insert mid section. You can make any number of sections in neovim :)
    --         -- for lualine it's any number greater then 2
    --         ins_left({
    --             function()
    --                 return "%="
    --             end,
    --         })
    --
    --         ins_left({
    --             -- Lsp server name .
    --             function()
    --                 local msg = "No Active Lsp"
    --                 local buf_ft = vim.api.nvim_buf_get_option(0, "filetype")
    --                 local clients = vim.lsp.get_clients()
    --                 if next(clients) == nil then
    --                     return msg
    --                 end
    --                 for _, client in ipairs(clients) do
    --                     local filetypes = client.config.filetypes
    --                     if filetypes and vim.fn.index(filetypes, buf_ft) ~= -1 then
    --                         return client.name
    --                     end
    --                 end
    --                 return msg
    --             end,
    --             icon = " LSP:",
    --             color = { fg = "#ffffff", gui = "bold" },
    --         })
    --
    --         -- Add components to right sections
    --         ins_right({
    --             "o:encoding",       -- option component same as &encoding in viml
    --             fmt = string.upper, -- I'm not sure why it's upper case either ;)
    --             cond = conditions.hide_in_width,
    --             color = { fg = colors.green, gui = "bold" },
    --         })
    --
    --         ins_right({
    --             "fileformat",
    --             fmt = string.upper,
    --             icons_enabled = true, -- I think icons are cool but Eviline doesn't have them. sigh
    --             color = { fg = colors.green, gui = "bold" },
    --         })
    --
    --         ins_right({
    --             "branch",
    --             icon = "",
    --             color = { fg = colors.violet, gui = "bold" },
    --         })
    --
    --         ins_right({
    --             "diff",
    --             -- Is it me or the symbol for modified us really weird
    --             symbols = { added = " ", modified = "柳 ", removed = " " },
    --             diff_color = {
    --                 added = { fg = colors.green },
    --                 modified = { fg = colors.orange },
    --                 removed = { fg = colors.red },
    --             },
    --             cond = conditions.hide_in_width,
    --         })
    --
    --         ins_right({
    --             function()
    --                 return "▊"
    --             end,
    --             color = { fg = colors.blue },
    --             padding = { left = 1 },
    --         })
    --
    --         -- Now don't forget to initialize lualine
    --         lualine.setup(config)
    --     end,
    -- },


}
